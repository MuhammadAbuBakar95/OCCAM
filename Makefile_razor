#
# Top-level OCCAM razor Makefile
#
# To use:
#
#  set LLVM_HOME to the install directory of LLVM
#  set OCCAM_HOME to where you want the occam shared library to live.
#
# Then type make, followed make install (or sudo -E gmake install).
#

ifneq (,)
This Makefile requires GNU Make.
endif

# tools that are used
PROTOC  = $(shell which protoc)
PYLINT  = $(shell which pylint)
PIP     = $(shell which pip)
MKDIR_P = mkdir -p
RM_F    = rm -f

export OCCAM_LIB = $(OCCAM_HOME)/lib


all: sanity_check occam_lib razor

#
# Sanity Checks.
#
# iam: We do not really need protoc if we add the generated code to the repo.
# But currently we do not do that in the python, but do do it in the  C++, so some
# consistency would be good.
#
#
sanity_check:  occam_home  llvm_home

occam_home:
ifeq ($(OCCAM_HOME),)
	$(error OCCAM_HOME is undefined)
endif
	$(MKDIR_P) $(OCCAM_LIB)

llvm_home:
ifeq ($(LLVM_HOME),)
	$(error LLVM_HOME is undefined)
endif

occam_lib:
	$(MAKE) -C src all


install_occam_lib: occam_lib
	$(MAKE) -C src install

uninstall_occam_lib:
	$(MAKE) -C src uninstall_occam_lib


install_razor:  razor
ifeq ($(PROTOC),)
	$(error installing razor requires pip)
endif
	$(PIP) install .

uninstall_razor:
ifeq ($(PROTOC),)
	$(error uninstalling razor requires pip)
endif
	$(PIP) uninstall razor


uninstall: uninstall_razor uninstall_occam_lib

install: install_occam_lib install_razor

razor: proto

protoc:
ifeq ($(PROTOC),)
	$(error google protobuffer compiler "protoc" required)
endif


proto:  protoc
	mkdir -p razor/proto
	touch razor/proto/__init__.py
	$(PROTOC) --proto_path=src --python_out=razor/proto src/Previrt.proto

#iam: local editable install of razor for developing
develop:
ifeq ($(PIP),)
	$(error developing requires pip)
endif
	$(PIP) install -e .


lint:
ifeq ($(PYLINT),)
	$(error lint target requires pylint)
endif
# for detecting more than just errors:
#	@ $(PYLINT) --rcfile=.pylintrc razor/*.py
	@ $(PYLINT) -E razor/*.py


clean:
	$(MAKE) -C src clean
	rm -rf razor/proto


.PHONY: clean razor
